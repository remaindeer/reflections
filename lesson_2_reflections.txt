-What happens when you initialize a repository? Why do you need to do it?
When we initialize a repository we give the command to git that it needs to be able to track changes in that specific directory from that moment. We need to do it 
in order to make sure we can create new commits and those commits will be saved.

-How is the staging area different from the working directory and the repository? What value do you think it offers?
It is different in that, it gives you more flexibility in terms of what "snapshot" you want to save. It doesn't force you to commit all the files in your working
directory at the same time.

-How can you use the staging area to make sure you have one commit per logical change?
You can use it to make sure that if a logical change spans more than one file, all the necessary files will be included in the commit. Because they can be specifically added to the staging area.

-What are some situations when branches would be helpful in keeping your history organized? How would branches help?
I think that branches can be really useful when the project is going in quite different directions, like testing an experimental feature or having a re-design of the interface. Branches would help keep track of all of the files in their separate histories. So that we can efficiently go back and forth between the branches and not have cross contamination.

-How do the diagrams help you visualize the branch structure?
The diagrams help me visualize the branch structure by showing me the hierarchy of the commits. So I can see what the parents are and how many different branches have been created. It's more simple and intuitive to look at a visual diagram.

-What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result of merging two branches is the summation of all commits in both branches. They're represented the way they are because they tie in multiple branches together.

